{"Structs/AnyStreamRequest.html#/s:5Squid13StreamRequestP7MessageQa":{"name":"Message","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid13StreamRequestP6ResultQa":{"name":"Result","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid14NetworkRequestP6routesAA9HttpRouteVvp":{"name":"routes","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid14NetworkRequestP5queryAA9HttpQueryVvp":{"name":"query","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid14NetworkRequestP8priorityAA0C8PriorityOvp":{"name":"priority","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid16AnyStreamRequestV3url5query8priorityAcA14UrlConvertible_p_AA9HttpQueryVAA0D8PriorityOtcfc":{"name":"init(url:query:priority:)","abstract":"<p>Initializes a new stream request for a particular URL.</p>","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid16AnyStreamRequestV6routes5query8priority7serviceAcA9HttpRouteV_AA0I5QueryVAA0D8PriorityOAA0I7Service_ptcfc":{"name":"init(routes:query:priority:service:)","abstract":"<p>Initializes a new stream request based on a predefined <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HttpService.html\">HttpService</a></code>.</p>","parent_name":"AnyStreamRequest"},"Structs/AnyStreamRequest.html#/s:5Squid16AnyStreamRequestV8scheduleAA0C0CyACGyF":{"name":"schedule()","abstract":"<p>Schedules the request and, as expected, returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Stream.html\">Stream</a></code> publisher. As the service is","parent_name":"AnyStreamRequest"},"Structs/Squid/Logger.html#/s:5SquidAAV6LoggerV7silenceyySbFZ":{"name":"silence(_:)","abstract":"<p>Globally enables or disables logging for the Squid library. Has no effect in release","parent_name":"Logger"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO14invalidRequestyADSS_tcADmF":{"name":"invalidRequest(message:)","abstract":"<p>The scheduled request is invalid due to some form of invalid parameters. This error e.g.","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO14encodingFailedyA2DmF":{"name":"encodingFailed","abstract":"<p>Scheduling a request failed as the provided parameters cannot be encoded as desired","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO14decodingFailedyA2DmF":{"name":"decodingFailed","abstract":"<p>A request&rsquo;s response failed due to some decoding failure when serializing the response.","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO7timeoutyA2DmF":{"name":"timeout","abstract":"<p>The scheduled request did not receive a response from the server due to a timeout.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO12noConnectionyA2DmF":{"name":"noConnection","abstract":"<p>The scheduled request did not receive a response as there is no internet connection.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO10invalidUrlyA2DmF":{"name":"invalidUrl","abstract":"<p>The url of the scheduled request is invalid.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO11unknownHostyA2DmF":{"name":"unknownHost","abstract":"<p>The host of the url of the scheduled request could not be found.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO15invalidResponseyA2DmF":{"name":"invalidResponse","abstract":"<p>The response from the server could not be parsed as desired.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO13requestFailedyADSi_10Foundation4DataVtcADmF":{"name":"requestFailed(statusCode:response:)","abstract":"<p>The request resulted in a response from the server, however, the response indicates","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO12closedStreamyADSo30NSURLSessionWebSocketCloseCodeV_tcADmF":{"name":"closedStream(code:)","abstract":"<p>A stream constructed by a <code>WebSocketRequest</code> was closed by the peer.</p>","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO17requestInProgressyA2DmF":{"name":"requestInProgress","abstract":"<p>An error indicating that a paginated request is already in progress and a new one will","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO15requestFinishedyA2DmF":{"name":"requestFinished","abstract":"<p>An error indicating that the last page of a paginated request has been reached and no","parent_name":"Error"},"Structs/Squid/Error.html#/s:5SquidAAV5ErrorO7unknownyADsAC_pcADmF":{"name":"unknown(_:)","abstract":"<p>An unknown error occured which cannot be described more precisely by using a particular","parent_name":"Error"},"Structs/Squid/Error.html":{"name":"Error","abstract":"<p>This enum is used for <em>all</em> errors that are generated by this library. Any external errors","parent_name":"Squid"},"Structs/Squid/Logger.html":{"name":"Logger","abstract":"<p>By default, the logger logs all requests and their responses to the command line. However,","parent_name":"Squid"},"Structs/AnyHttpService.html#/s:5Squid11HttpServiceP6apiUrlAA0E11Convertible_pvp":{"name":"apiUrl","parent_name":"AnyHttpService"},"Structs/AnyHttpService.html#/s:5Squid11HttpServiceP6headerAA0B6HeaderVvp":{"name":"header","parent_name":"AnyHttpService"},"Structs/AnyHttpService.html#/s:5Squid11HttpServiceP20sessionConfigurationSo012NSURLSessionE0Cvp":{"name":"sessionConfiguration","parent_name":"AnyHttpService"},"Structs/AnyHttpService.html#/s:5Squid11HttpServiceP14retrierFactoryAA07RetrierE0_pvp":{"name":"retrierFactory","parent_name":"AnyHttpService"},"Structs/AnyHttpService.html#/s:5Squid14AnyHttpServiceV2at6header20sessionConfiguration14retrierFactory12processErrorAcA14UrlConvertible_p_AA0C6HeaderVSo012NSURLSessionH0CAA07RetrierJ0_pyA2AV0L0Octcfc":{"name":"init(at:header:sessionConfiguration:retrierFactory:processError:)","abstract":"<p>Initializes a new HTTP service while setting all parameters as provided.</p>","parent_name":"AnyHttpService"},"Structs/NilRetrier.html#/s:5Squid10NilRetrierV7factoryAA0C7Factory_pyFZ":{"name":"factory()","abstract":"<p>Initializes a new factory yielding instances of nil retriers for requests (i.e. requests are","parent_name":"NilRetrier"},"Structs/NilRetrier.html#/s:5Squid10NilRetrierVACycfc":{"name":"init()","abstract":"<p>Initializes a new never-retrying retrier. The implementation does nothing.</p>","parent_name":"NilRetrier"},"Structs/NilRetrier.html#/s:5Squid7RetrierP5retry_11failingWith7Combine6FutureCySbs5NeverOGqd___A2AV5ErrorOtAA7RequestRd__lF":{"name":"retry(_:failingWith:)","parent_name":"NilRetrier"},"Structs/AnyRetrierFactory.html#/s:5Squid17AnyRetrierFactoryVyAcA0C0_pyccfc":{"name":"init(_:)","abstract":"<p>Creates a new retrier factory by passing a closure that is simply executed when a new","parent_name":"AnyRetrierFactory"},"Structs/AnyRetrierFactory.html#/s:5Squid14RetrierFactoryP6create3forAA0B0_pqd___tAA7RequestRd__lF":{"name":"create(for:)","parent_name":"AnyRetrierFactory"},"Structs/AnyRequest.html#/s:5Squid7RequestP6ResultQa":{"name":"Result","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid14NetworkRequestP6routesAA9HttpRouteVvp":{"name":"routes","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid7RequestP6methodAA10HttpMethodOvp":{"name":"method","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid14NetworkRequestP5queryAA9HttpQueryVvp":{"name":"query","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid14NetworkRequestP6headerAA10HttpHeaderVvp":{"name":"header","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid7RequestP4bodyAA8HttpBody_pvp":{"name":"body","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid7RequestP19acceptedStatusCodesSNySiGvp":{"name":"acceptedStatusCodes","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid14NetworkRequestP8priorityAA0C8PriorityOvp":{"name":"priority","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid10AnyRequestV_3url5query6header4body19acceptedStatusCodes8priorityAcA10HttpMethodO_AA14UrlConvertible_pAA0L5QueryVAA0L6HeaderVAA0L4Body_pSNySiGAA0C8PriorityOtcfc":{"name":"init(_:url:query:header:body:acceptedStatusCodes:priority:)","abstract":"<p>Initializes a new request for a particular URL.</p>","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid10AnyRequestV_6routes5query6header4body19acceptedStatusCodes8priority7serviceAcA10HttpMethodO_AA0M5RouteVAA0M5QueryVAA0M6HeaderVAA0M4Body_pSNySiGAA0C8PriorityOAA0M7Service_ptcfc":{"name":"init(_:routes:query:header:body:acceptedStatusCodes:priority:service:)","abstract":"<p>Initializes a new request based on a predefined <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HttpService.html\">HttpService</a></code>.</p>","parent_name":"AnyRequest"},"Structs/AnyRequest.html#/s:5Squid10AnyRequestV8scheduleAA8ResponseCyACGyF":{"name":"schedule()","abstract":"<p>Schedules the request and, as expected, returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Response.html\">Response</a></code> publisher. As the service is","parent_name":"AnyRequest"},"Structs/HttpRoute.html#/s:5Squid9HttpRouteVyACSayypGcfc":{"name":"init(_:)","abstract":"<p>Initializes a new HTTP route.</p>","parent_name":"HttpRoute"},"Structs/HttpRoute.html#/s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc":{"name":"init(arrayLiteral:)","parent_name":"HttpRoute"},"Structs/HttpRoute.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HttpRoute"},"Structs/HttpRoute.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"HttpRoute"},"Structs/HttpRoute.html#/s:5Squid9HttpRouteV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Combines the routing paths of two HTTP routes by appending the paths of the latter route to","parent_name":"HttpRoute"},"Structs/HttpQuery.html#/s:5Squid9HttpQueryVyACSDySSypGcfc":{"name":"init(_:)","abstract":"<p>Initializes a new set of HTTP query parameters.</p>","parent_name":"HttpQuery"},"Structs/HttpQuery.html#/s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc":{"name":"init(dictionaryLiteral:)","parent_name":"HttpQuery"},"Structs/HttpQuery.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HttpQuery"},"Structs/HttpQuery.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"HttpQuery"},"Structs/HttpQuery.html#/s:5Squid9HttpQueryV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Combines the parameters of two queries into a single set of query parameters. Whenever a","parent_name":"HttpQuery"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV6acceptAEvpZ":{"name":"accept","abstract":"<p>HTTP &ldquo;Accept&rdquo; header: defines a list of allowed media types in the response.</p>","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV14acceptLanguageAEvpZ":{"name":"acceptLanguage","abstract":"<p>HTTP &ldquo;Accept-Language&rdquo; header: defines a list of allowed languages in the response.</p>","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV13authorizationAEvpZ":{"name":"authorization","abstract":"<p>HTTP &ldquo;Authorization&rdquo; header: authentication credentials for HTTP authentication.</p>","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV13contentLengthAEvpZ":{"name":"contentLength","abstract":"<p>HTTP &ldquo;Content-Length&rdquo; header: the length of the request body in bytes.</p>","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV11contentTypeAEvpZ":{"name":"contentType","abstract":"<p>HTTP &ldquo;Content-Type&rdquo; header: the MIME type of the request body. Use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/HttpMimeType.html\">HttpMimeType</a></code> for","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:5Squid10HttpHeaderV5FieldV6apiKeyAEvpZ":{"name":"apiKey","abstract":"<p>Custom HTTP &ldquo;X-Api-Key&rdquo; header that is used often: sets an API key that identifies the","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:s26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc":{"name":"init(stringLiteral:)","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Field"},"Structs/HttpHeader/Field.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Field"},"Structs/HttpHeader/Field.html":{"name":"Field","abstract":"<p>A header field represents the <em>key</em> for a specific entry in the HTTP header. There exist","parent_name":"HttpHeader"},"Structs/HttpHeader.html#/s:5Squid10HttpHeaderVyACSDyAC5FieldVSSGcfc":{"name":"init(_:)","abstract":"<p>Initializes a new header for a HTTP request with the given fields.</p>","parent_name":"HttpHeader"},"Structs/HttpHeader.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"HttpHeader"},"Structs/HttpHeader.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"HttpHeader"},"Structs/HttpHeader.html#/s:s30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc":{"name":"init(dictionaryLiteral:)","parent_name":"HttpHeader"},"Structs/HttpHeader.html#/s:5Squid10HttpHeaderV1poiyA2C_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Combines the fields of two different headers into a single header containing all fields.","parent_name":"HttpHeader"},"Structs/HttpHeader.html":{"name":"HttpHeader","abstract":"<p>This struct is used to represent a header of HTTP requests. It can contain arbitrarily many"},"Structs/HttpQuery.html":{"name":"HttpQuery","abstract":"<p>This entity represents a set of HTTP query parameters. Basically, it abstracts a simple mapping"},"Structs/HttpRoute.html":{"name":"HttpRoute","abstract":"<p>An HTTP route represents a set of URL routing paths. Essentially, a set of routing paths can"},"Structs/AnyRequest.html":{"name":"AnyRequest","abstract":"<p>This struct can be used to construct requests easily without having to define a custom entity"},"Structs/AnyRetrierFactory.html":{"name":"AnyRetrierFactory","abstract":"<p>This entity may be used to provide retriers independent of the request that has been scheduled."},"Structs/NilRetrier.html":{"name":"NilRetrier","abstract":"<p>This retrier is used to indicate that the request is not retried under any circumstances."},"Structs/AnyHttpService.html":{"name":"AnyHttpService","abstract":"<p>This entity provides a way to initialize an HTTP service without implementing the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HttpService.html\">HttpService</a></code>"},"Structs/Squid.html":{"name":"Squid","abstract":"<p>This struct simply provides a scope for global &ldquo;utility&rdquo; structures that need to be accessible"},"Structs/AnyStreamRequest.html":{"name":"AnyStreamRequest","abstract":"<p>This struct can be used to construct stream requests easily without having to define a custom"},"Protocols/UrlConvertible.html#/s:5Squid14UrlConvertibleP3url10Foundation3URLVSgvp":{"name":"url","abstract":"<p>Returns <code>self</code> as url if possible or <code>nil</code> otherwise.</p>","parent_name":"UrlConvertible"},"Protocols/JsonStreamRequest.html#/s:5Squid17JsonStreamRequestP15decodeSnakeCaseSbvp":{"name":"decodeSnakeCase","abstract":"<p>Defines whether the encoder and decoder camel case in the Swift code as snake case in the","parent_name":"JsonStreamRequest"},"Protocols/JsonStreamRequest.html#/s:5Squid13StreamRequestP6encodeySo25NSURLSessionWebSocketTaskC10FoundationE7MessageOAHQzKF":{"name":"encode(_:)","parent_name":"JsonStreamRequest"},"Protocols/JsonStreamRequest.html#/s:5Squid13StreamRequestP6decodey6ResultQzSo25NSURLSessionWebSocketTaskC10FoundationE7MessageOKF":{"name":"decode(_:)","parent_name":"JsonStreamRequest"},"Protocols/StreamRequest.html#/s:5Squid13StreamRequestP7MessageQa":{"name":"Message","abstract":"<p>Defines the type of the values sent by the client to the peer. By default, this is set to","parent_name":"StreamRequest"},"Protocols/StreamRequest.html#/s:5Squid13StreamRequestP6ResultQa":{"name":"Result","abstract":"<p>Defines the type of the values sent from the peer to the client.</p>","parent_name":"StreamRequest"},"Protocols/StreamRequest.html#/s:5Squid13StreamRequestP6encodeySo25NSURLSessionWebSocketTaskC10FoundationE7MessageOAHQzKF":{"name":"encode(_:)","abstract":"<p>Encodes a message sent from the client to the peer into an appropriate format for WebSocket","parent_name":"StreamRequest"},"Protocols/StreamRequest.html#/s:5Squid13StreamRequestP6decodey6ResultQzSo25NSURLSessionWebSocketTaskC10FoundationE7MessageOKF":{"name":"decode(_:)","abstract":"<p>Decodes a message sent by the peer into the stream&rsquo;s result type. There exist default","parent_name":"StreamRequest"},"Protocols/StreamRequest.html#/s:5Squid13StreamRequestPAAE8schedule4withAA0B0CyxGAA11HttpService_p_tF":{"name":"schedule(with:)","abstract":"<p>Schedules the stream request against the API specified by the given HTTP service. The","parent_name":"StreamRequest"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP6apiUrlAA0E11Convertible_pvp":{"name":"apiUrl","abstract":"<p>The URL of the API representes by this HTTP service (e.g. &ldquo;api.example.com&rdquo;). This is the","parent_name":"HttpService"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP6headerAA0B6HeaderVvp":{"name":"header","abstract":"<p>A header that ought to be used by all requests issued against the API represented by this","parent_name":"HttpService"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP11asyncHeader7Combine6FutureCyAA0bE0Vs5Error_pGvp":{"name":"asyncHeader","abstract":"<p>A header that is provided asynchronously. If possible, use the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HttpService.html#/s:5Squid11HttpServiceP6headerAA0B6HeaderVvp\">header</a></code> property instead.","parent_name":"HttpService"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP20sessionConfigurationSo012NSURLSessionE0Cvp":{"name":"sessionConfiguration","abstract":"<p>The session configuration to use for all requests using this service.</p>","parent_name":"HttpService"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP14retrierFactoryAA07RetrierE0_pvp":{"name":"retrierFactory","abstract":"<p>The retrier factory provides retriers for requests.</p>","parent_name":"HttpService"},"Protocols/HttpService.html#/s:5Squid11HttpServiceP4hookAA0C4Hook_pvp":{"name":"hook","abstract":"<p>The hook describes a component that is called whenever a request is scheduled for this","parent_name":"HttpService"},"Protocols/ServiceHook.html#/s:5Squid11ServiceHookP10onScheduley6ResultQyd__Sgqd___10Foundation10URLRequestVtAA7RequestRd__lF":{"name":"onSchedule(_:_:)","abstract":"<p>The method is called right before a request is scheduled. It may return the result type of","parent_name":"ServiceHook"},"Protocols/ServiceHook.html#/s:5Squid11ServiceHookP9onSuccess__6resultyqd___10Foundation10URLRequestV6ResultQyd__tAA7RequestRd__lF":{"name":"onSuccess(_:_:result:)","abstract":"<p>This method is called whenever a request was successfully finished, i.e. a valid response","parent_name":"ServiceHook"},"Protocols/ServiceHook.html#/s:5Squid11ServiceHookP9onFailureyys5Error_pF":{"name":"onFailure(_:)","abstract":"<p>This method is called whenever a failure occurs when scheduling a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Request.html\">Request</a></code> or a","parent_name":"ServiceHook"},"Protocols/RetrierFactory.html#/s:5Squid14RetrierFactoryP6create3forAA0B0_pqd___tAA7RequestRd__lF":{"name":"create(for:)","abstract":"<p>Returns some retrier for the given request. This method is only called when the given","parent_name":"RetrierFactory"},"Protocols/Retrier.html#/s:5Squid7RetrierP21allowsMultipleRetriesSbvp":{"name":"allowsMultipleRetries","abstract":"<p>Whether the retrier may retry requests for multiple times or if - when the request fails -","parent_name":"Retrier"},"Protocols/Retrier.html#/s:5Squid7RetrierP5retry_11failingWith7Combine6FutureCySbs5NeverOGqd___A2AV5ErrorOtAA7RequestRd__lF":{"name":"retry(_:failingWith:)","abstract":"<p>Retries the given request that failed with the given error. Based on this information,","parent_name":"Retrier"},"Protocols/JsonRequest.html#/s:5Squid11JsonRequestP15decodeSnakeCaseSbvp":{"name":"decodeSnakeCase","abstract":"<p>Defines whether the decoder decoding the raw data to the result type should consider","parent_name":"JsonRequest"},"Protocols/JsonRequest.html#/s:5Squid7RequestP6decodey6ResultQz10Foundation4DataVKF":{"name":"decode(_:)","parent_name":"JsonRequest"},"Protocols/JsonRequest.html#/s:5Squid11JsonRequestPAAE8schedule17forPaginationWith5chunk18zeroBasedPageIndex13paginatedTypeAA9PaginatorCyxqd__GAA11HttpService_p_SiSbqd__mtAA13PaginatedDataRd__SeRd__0sN0AaMPQyd__6ResultRtzlF":{"name":"schedule(forPaginationWith:chunk:zeroBasedPageIndex:paginatedType:)","abstract":"<p>This method is very similar to the method","parent_name":"JsonRequest"},"Protocols/Request.html#/s:5Squid7RequestP6ResultQa":{"name":"Result","abstract":"<p>The expected type of the server&rsquo;s response upon a successful request.</p>","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestP6methodAA10HttpMethodOvp":{"name":"method","abstract":"<p>The HTTP method of the request.</p>","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestP4bodyAA8HttpBody_pvp":{"name":"body","abstract":"<p>The HTTP body of the request. May only be set to an instance of something other than","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestP7preparey10Foundation10URLRequestVAGF":{"name":"prepare(_:)","abstract":"<p>Prepares the URL request that will be sent. The function is passed the request as assembled","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestP19acceptedStatusCodesSNySiGvp":{"name":"acceptedStatusCodes","abstract":"<p>The range of accepted status codes for the request. Whenever the response&rsquo;s status code is","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestP6decodey6ResultQz10Foundation4DataVKF":{"name":"decode(_:)","abstract":"<p>Upon successful completion of the HTTP request itself, this method is responsible for","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestPAAE8schedule4withAA8ResponseCyxGAA11HttpService_p_tF":{"name":"schedule(with:)","abstract":"<p>Schedules the request against the API specified by the given HTTP service. The response is","parent_name":"Request"},"Protocols/Request.html#/s:5Squid7RequestPAAE8schedule17forPaginationWith5chunk18zeroBasedPageIndex6decodeAA9PaginatorCyxqd__GAA11HttpService_p_SiSbqd__10Foundation4DataV_xtKctAA09PaginatedQ0Rd__0Q4TypeQyd__6ResultRtzlF":{"name":"schedule(forPaginationWith:chunk:zeroBasedPageIndex:decode:)","abstract":"<p>Schedules the request as paginated request against the API specified by the given HTTP","parent_name":"Request"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP18usesSecureProtocolSbvp":{"name":"usesSecureProtocol","abstract":"<p>Whether the request makes use of the secure counterpart of the protocol (e.g. &ldquo;https&rdquo; for","parent_name":"NetworkRequest"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP6routesAA9HttpRouteVvp":{"name":"routes","abstract":"<p>The routing paths of the request.</p>","parent_name":"NetworkRequest"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP5queryAA9HttpQueryVvp":{"name":"query","abstract":"<p>The query parameters to be used in the request.</p>","parent_name":"NetworkRequest"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP6headerAA10HttpHeaderVvp":{"name":"header","abstract":"<p>The header fields set when scheduling the request. These fields overwrite potential header","parent_name":"NetworkRequest"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP8priorityAA0C8PriorityOvp":{"name":"priority","abstract":"<p>The priority of the request.</p>","parent_name":"NetworkRequest"},"Protocols/NetworkRequest.html#/s:5Squid14NetworkRequestP7timeoutSdvp":{"name":"timeout","abstract":"<p>The number of seconds to wait before a request is considered to have failed.</p>","parent_name":"NetworkRequest"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP0C4TypeQa":{"name":"DataType","abstract":"<p>The actual type of the requested data (usually provided as a field of the top-level JSON).</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP4data0C4TypeQzvp":{"name":"data","abstract":"<p>The actual data that is received by the request.</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP4pageSivp":{"name":"page","abstract":"<p>The index of the current page. By convention, an index of 1 indicates the first page. You","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP4fromSivp":{"name":"from","abstract":"<p>The index of the first element of the data (inclusive).</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP2toSivp":{"name":"to","abstract":"<p>The index of the last element of the data (exclusive).</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP5chunkSivp":{"name":"chunk","abstract":"<p>The requested number of items on the page. Might be larger than the actual number of","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP10totalCountSivp":{"name":"totalCount","abstract":"<p>The total number of elements that are available.</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP14totalPageCountSivp":{"name":"totalPageCount","abstract":"<p>The total number of pages that are available given the chunk.</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataP18zeroBasedPageIndexSbvp":{"name":"zeroBasedPageIndex","abstract":"<p>Whether the first page of the paginated request is indexed with 0. By default, this property","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataPAAE5countSivp":{"name":"count","abstract":"<p>The number of elements currently returned.</p>","parent_name":"PaginatedData"},"Protocols/PaginatedData.html#/s:5Squid13PaginatedDataPAAE10isLastPageSbvp":{"name":"isLastPage","abstract":"<p>Returns whether the returned page of the data is the last page available.</p>","parent_name":"PaginatedData"},"Protocols/HttpBody.html#/s:5Squid8HttpBodyP3add2toy10Foundation10URLRequestVz_tKF":{"name":"add(to:)","abstract":"<p>Adds the body to the given request. The method also adds appropriate headers based on the","parent_name":"HttpBody"},"Protocols/HttpBody.html#/s:5Squid8HttpBodyPAAE11descriptionSSvp":{"name":"description","abstract":"<p>The description is used for debugging purposes: whenever requests are printed, their body&rsquo;s","parent_name":"HttpBody"},"Protocols/HttpBody.html":{"name":"HttpBody","abstract":"<p>The HttpBody protocol ought to be implemented by any entity that can attach data to the body of"},"Protocols/PaginatedData.html":{"name":"PaginatedData","abstract":"<p>The paginated data protocol defines a common interface for result types of paginated requests."},"Protocols/NetworkRequest.html":{"name":"NetworkRequest","abstract":"<p>The network request is a protocol that serves as a base protocol for requests on remote servers."},"Protocols/Request.html":{"name":"Request","abstract":"<p>The request protocol is the core building block of the Squid framework. The general idea of a"},"Protocols/JsonRequest.html":{"name":"JsonRequest","abstract":"<p>This request protocol is a specialization of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Request.html\">Request</a></code> protocol. It can be used often when"},"Protocols/Retrier.html":{"name":"Retrier","abstract":"<p>A retrier represents a &ldquo;callback&rdquo; that is executed whenever a request fails. One option for a"},"Protocols/RetrierFactory.html":{"name":"RetrierFactory","abstract":"<p>A retrier factory is a simple class that creates retriers for failed requests on demand. The"},"Protocols/ServiceHook.html":{"name":"ServiceHook","abstract":"<p>A service hook represents a component that is called at specific events during the processing"},"Protocols/HttpService.html":{"name":"HttpService","abstract":"<p>An HTTP service can be used to abstract a specific endpoint away from specific requests."},"Protocols/StreamRequest.html":{"name":"StreamRequest","abstract":"<p>A request for a steram is similar to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Request.html\">Request</a></code>, only that it does not send an HTTP request,"},"Protocols/JsonStreamRequest.html":{"name":"JsonStreamRequest","abstract":"<p>Similarly to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/JsonRequest.html\">JsonRequest</a></code>, this entity may be used whenever a JSON API is used, i.e. all"},"Protocols/UrlConvertible.html":{"name":"UrlConvertible","abstract":"<p>Any entity implementing this protocol declares that it is able to possibly represent itself as"},"Extensions/String.html#/s:SS5SquidE3url10Foundation3URLVSgvp":{"name":"url","abstract":"<p>Returns <code>self</code> by converting into a url. All characters are encoded to be allowed in host","parent_name":"String"},"Extensions/URL.html#/s:10Foundation3URLV5SquidE3urlACSgvp":{"name":"url","abstract":"<p>Simply returns <code>self</code>, <code>nil</code> is never returned.</p>","parent_name":"URL"},"Extensions/Publishers/IgnoreResultErrors.html#/s:7Combine9PublisherP7FailureQa":{"name":"Failure","parent_name":"IgnoreResultErrors"},"Extensions/Publishers/IgnoreResultErrors.html#/s:7Combine9PublisherP7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF":{"name":"receive(subscriber:)","parent_name":"IgnoreResultErrors"},"Extensions/Publishers/IgnoreError.html#/s:7Combine9PublisherP6OutputQa":{"name":"Output","parent_name":"IgnoreError"},"Extensions/Publishers/IgnoreError.html#/s:7Combine9PublisherP7FailureQa":{"name":"Failure","parent_name":"IgnoreError"},"Extensions/Publishers/IgnoreError.html#/s:7Combine9PublisherP7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF":{"name":"receive(subscriber:)","parent_name":"IgnoreError"},"Extensions/Publishers/IgnoreError.html":{"name":"IgnoreError","abstract":"<p>This publisher may be used to ignore any errors of an upstream publisher and replace errors","parent_name":"Publishers"},"Extensions/Publishers/IgnoreResultErrors.html":{"name":"IgnoreResultErrors","abstract":"<p>This publisher can be used to ignore any errors of publishers which output values as","parent_name":"Publishers"},"Extensions/Publisher.html#/s:7Combine9PublisherP5SquidE11ignoreErrorAA10PublishersOADE06IgnoreE0Vy_xGyF":{"name":"ignoreError()","abstract":"<p>Use this function whenever you want to ignore all errors emitted by the upstream publisher.","parent_name":"Publisher"},"Extensions/Publisher.html#/s:7Combine9PublisherP5Squids5NeverO7FailureRtzrlE18ignoreResultErrorsAA10PublishersOADE06IgnoregH0Vy_xqd__qd_0_Gys5ErrorRd_0_s0G0Oyqd__qd_0_G6OutputRtzr0_lF":{"name":"ignoreResultErrors()","abstract":"<p>Ignores all errors carried via a <code>Result</code> object and only returns unwrapped <code>success</code>","parent_name":"Publisher"},"Extensions/Publisher.html":{"name":"Publisher"},"Extensions/Publishers.html":{"name":"Publishers"},"Extensions/URL.html":{"name":"URL"},"Extensions/String.html":{"name":"String"},"Enums/RequestPriority.html#/s:5Squid15RequestPriorityO7utilityyA2CmF":{"name":"utility","abstract":"<p>The utility priority indicates that the request may be scheduled at some time in the future.","parent_name":"RequestPriority"},"Enums/RequestPriority.html#/s:5Squid15RequestPriorityO7defaultyA2CmF":{"name":"default","abstract":"<p>The default priority indicates that requests is likely to be scheduled right away.</p>","parent_name":"RequestPriority"},"Enums/RequestPriority.html#/s:5Squid15RequestPriorityO13userInitiatedyA2CmF":{"name":"userInitiated","abstract":"<p>The user initiated priority is the highest available priority and essentially guarantees","parent_name":"RequestPriority"},"Enums/HttpMimeType.html#/s:5Squid12HttpMimeTypeO4jsonyA2CmF":{"name":"json","abstract":"<p>Mime type for JSON content.</p>","parent_name":"HttpMimeType"},"Enums/HttpMimeType.html#/s:5Squid12HttpMimeTypeO3pngyA2CmF":{"name":"png","abstract":"<p>Mime type for PNG images.</p>","parent_name":"HttpMimeType"},"Enums/HttpMimeType.html#/s:5Squid12HttpMimeTypeO4jpegyA2CmF":{"name":"jpeg","abstract":"<p>Mime type for JPEG images.</p>","parent_name":"HttpMimeType"},"Enums/HttpMethod.html#/s:5Squid10HttpMethodO3getyA2CmF":{"name":"get","abstract":"<p>GET method.</p>","parent_name":"HttpMethod"},"Enums/HttpMethod.html#/s:5Squid10HttpMethodO4postyA2CmF":{"name":"post","abstract":"<p>POST method.</p>","parent_name":"HttpMethod"},"Enums/HttpMethod.html#/s:5Squid10HttpMethodO3putyA2CmF":{"name":"put","abstract":"<p>PUT method.</p>","parent_name":"HttpMethod"},"Enums/HttpMethod.html#/s:5Squid10HttpMethodO6deleteyA2CmF":{"name":"delete","abstract":"<p>DELETE method.</p>","parent_name":"HttpMethod"},"Enums/HttpData/Json.html#/s:5Squid8HttpDataO4JsonV_7encoderAEy_xGx_10Foundation11JSONEncoderCSgtcfc":{"name":"init(_:encoder:)","abstract":"<p>Initializes a new JSON HTTP body which ought to encode the given value in the request","parent_name":"Json"},"Enums/HttpData/Json.html#/s:5Squid8HttpBodyP3add2toy10Foundation10URLRequestVz_tKF":{"name":"add(to:)","parent_name":"Json"},"Enums/HttpData/Json.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Json"},"Enums/HttpData/Json.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Json"},"Enums/HttpData/Json.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"Json"},"Enums/HttpData/Image.html#/s:5Squid8HttpDataO5ImageV_4dataAeA0B8MimeTypeO_10Foundation0C0Vtcfc":{"name":"init(_:data:)","abstract":"<p>Initializes a new HTTP image body.</p>","parent_name":"Image"},"Enums/HttpData/Image.html#/s:5Squid8HttpBodyP3add2toy10Foundation10URLRequestVz_tKF":{"name":"add(to:)","parent_name":"Image"},"Enums/HttpData/Image.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Image"},"Enums/HttpData/Empty.html#/s:5Squid8HttpDataO5EmptyVAEycfc":{"name":"init()","abstract":"<p>Initializes a new empty HTTP body. The initializer does nothing.</p>","parent_name":"Empty"},"Enums/HttpData/Empty.html#/s:5Squid8HttpBodyP3add2toy10Foundation10URLRequestVz_tKF":{"name":"add(to:)","parent_name":"Empty"},"Enums/HttpData/Empty.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Empty"},"Enums/HttpData/Empty.html":{"name":"Empty","abstract":"<p>The empty HTTP body is used as default for all requests and sets no HTTP body at all.</p>","parent_name":"HttpData"},"Enums/HttpData/Image.html":{"name":"Image","abstract":"<p>The image HTTP body can be used to attach an image to a request. Currently, only PNG and","parent_name":"HttpData"},"Enums/HttpData/Json.html":{"name":"Json","abstract":"<p>The JSON HTTP body is presumably the most commonly used non-empty body for HTTP requests.","parent_name":"HttpData"},"Enums/HttpData.html":{"name":"HttpData","abstract":"<p>The HttpData enum is an empty enumeration that is merely used to put different implementations"},"Enums/HttpMethod.html":{"name":"HttpMethod","abstract":"<p>This enum represents available HTTP methods for requests sent via the Squid library. Currently,"},"Enums/HttpMimeType.html":{"name":"HttpMimeType","abstract":"<p>This enum provides commonly used MIME types that are e.g. provided in HTTP requests&rsquo;"},"Enums/RequestPriority.html":{"name":"RequestPriority","abstract":"<p>The request priority can be used to govern how important a specific request is considered, i.e."},"Classes/CachingServiceHook.html#/s:5Squid18CachingServiceHookC3ttlACSd_tcfc":{"name":"init(ttl:)","abstract":"<p>Initializes a new hook that answers requests from the cache whenever the timestamp that they","parent_name":"CachingServiceHook"},"Classes/CachingServiceHook.html#/s:5Squid11ServiceHookP10onScheduley6ResultQyd__Sgqd___10Foundation10URLRequestVtAA7RequestRd__lF":{"name":"onSchedule(_:_:)","parent_name":"CachingServiceHook"},"Classes/CachingServiceHook.html#/s:5Squid11ServiceHookP9onSuccess__6resultyqd___10Foundation10URLRequestV6ResultQyd__tAA7RequestRd__lF":{"name":"onSuccess(_:_:result:)","parent_name":"CachingServiceHook"},"Classes/BackoffRetrier/Strategy.html#/s:5Squid14BackoffRetrierC8StrategyO17exponentialBinaryyA2EmF":{"name":"exponentialBinary","abstract":"<p>The exponential binary strategy starts by waiting one second. After each successive","parent_name":"Strategy"},"Classes/BackoffRetrier.html#/s:5Squid14BackoffRetrierC7factory8strategy03maxB014retryConditionAA0C7Factory_pAC8StrategyO_SdSbA2AV5ErrorOctFZ":{"name":"factory(strategy:maxBackoff:retryCondition:)","abstract":"<p>Initializes a new factory yielding instances of backoff retriers for requests.</p>","parent_name":"BackoffRetrier"},"Classes/BackoffRetrier.html#/s:5Squid14BackoffRetrierC21defaultRetryConditionySbA2AV5ErrorOFZ":{"name":"defaultRetryCondition(_:)","abstract":"<p>Defines the default condition that a request is retried based on the error that has occured.","parent_name":"BackoffRetrier"},"Classes/BackoffRetrier.html#/s:5Squid7RetrierP5retry_11failingWith7Combine6FutureCySbs5NeverOGqd___A2AV5ErrorOtAA7RequestRd__lF":{"name":"retry(_:failingWith:)","parent_name":"BackoffRetrier"},"Classes/BackoffRetrier/Strategy.html":{"name":"Strategy","abstract":"<p>The strategy of a backoff retrier essentially defines the time to wait before repeating the","parent_name":"BackoffRetrier"},"Classes/BackoffRetrier.html#/s:5Squid7RetrierP21allowsMultipleRetriesSbvp":{"name":"allowsMultipleRetries","parent_name":"BackoffRetrier"},"Classes/Stream.html#/s:7Combine9PublisherP7FailureQa":{"name":"Failure","parent_name":"Stream"},"Classes/Stream.html#/s:7Combine9PublisherP6OutputQa":{"name":"Output","parent_name":"Stream"},"Classes/Stream.html#/s:5Squid6StreamC4sendy7Combine12AnyPublisherVys6ResultOyytA2AV5ErrorOGs5NeverOG7MessageQzF":{"name":"send(_:)","abstract":"<p>This simple variant of the <code>send</code> method sends a message to the peer to which the WebSocket","parent_name":"Stream"},"Classes/Stream.html#/s:5Squid6StreamC4send4fromQrqd___t7Combine9PublisherRd__6OutputQyd__7MessageRtzs5NeverO7FailureRtd__lF":{"name":"send(from:)","abstract":"<p>This variant of the <code>send</code> method provides a more reactive approach towards sending messages","parent_name":"Stream"},"Classes/Stream.html#/s:7Combine9PublisherP7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF":{"name":"receive(subscriber:)","parent_name":"Stream"},"Classes/Response.html#/s:7Combine9PublisherP6OutputQa":{"name":"Output","parent_name":"Response"},"Classes/Response.html#/s:7Combine9PublisherP7FailureQa":{"name":"Failure","parent_name":"Response"},"Classes/Response.html#/s:7Combine9PublisherP7receive10subscriberyqd___tAA10SubscriberRd__7FailureQyd__AGRtz5InputQyd__6OutputRtzlF":{"name":"receive(subscriber:)","parent_name":"Response"},"Classes/Paginator.html#/s:5Squid9PaginatorC7connect4with7Combine12AnyPublisherVy6ResultQzA2AV5ErrorOGqd___tAF0G0Rd__s5NeverO7FailureRtd__lF":{"name":"connect(with:)","abstract":"<p>This method is used to initiate pagination calls. Once subscribed, the request for the","parent_name":"Paginator"},"Classes/Paginator.html":{"name":"Paginator","abstract":"<p>A paginator is returned whenever a request is scheduled for pagination (see"},"Classes/Response.html":{"name":"Response","abstract":"<p>An instance of the response class is returned whenever a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Request.html\">Request</a></code> is scheduled. The response"},"Classes/Stream.html":{"name":"Stream","abstract":"<p>An instance of the stream class is returned whenever a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/StreamRequest.html\">StreamRequest</a></code> is scheduled. The stream"},"Classes/BackoffRetrier.html":{"name":"BackoffRetrier","abstract":"<p>The backoff retrier is a more complex, stateful retrier that retries a request upon certain"},"Classes/CachingServiceHook.html":{"name":"CachingServiceHook","abstract":"<p>The caching service hook caches a server&rsquo;s response for requests for a specified time and"},"03-websockets.html":{"name":"03 WebSockets"},"01-basics.html":{"name":"01 Basics"},"04-pagination.html":{"name":"04 Pagination"},"02-retriers.html":{"name":"02 Retriers"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}